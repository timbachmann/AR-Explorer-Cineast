//
// MediaSegmentMetadataDescriptor.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MediaSegmentMetadataDescriptor: Codable, JSONEncodable, Hashable {

    public var segmentid: String?
    public var domain: String?
    public var key: String?
    public var value: String?
    public var exists: Bool?
    public var segmentId: String?

    public init(segmentid: String? = nil, domain: String? = nil, key: String? = nil, value: String? = nil, exists: Bool? = nil, segmentId: String? = nil) {
        self.segmentid = segmentid
        self.domain = domain
        self.key = key
        self.value = value
        self.exists = exists
        self.segmentId = segmentId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case segmentid
        case domain
        case key
        case value
        case exists
        case segmentId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(segmentid, forKey: .segmentid)
        try container.encodeIfPresent(domain, forKey: .domain)
        try container.encodeIfPresent(key, forKey: .key)
        try container.encodeIfPresent(value, forKey: .value)
        try container.encodeIfPresent(exists, forKey: .exists)
        try container.encodeIfPresent(segmentId, forKey: .segmentId)
    }
}

