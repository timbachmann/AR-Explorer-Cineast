//
// MetadataAccessSpecification.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MetadataAccessSpecification: Codable, JSONEncodable, Hashable {

    public enum ModelType: String, Codable, CaseIterable {
        case object = "OBJECT"
        case segment = "SEGMENT"
    }
    public var type: ModelType?
    public var domain: String?
    public var key: String?

    public init(type: ModelType? = nil, domain: String? = nil, key: String? = nil) {
        self.type = type
        self.domain = domain
        self.key = key
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case domain
        case key
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(domain, forKey: .domain)
        try container.encodeIfPresent(key, forKey: .key)
    }
}

